[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'nathom/filetype.nvim'
depends = 'impatient.nvim'
on_event = ['BufRead', 'BufNewFile']
lua_source = '''
  require("filetype").setup({
    overrides = {
      extensions = {
        tf = "terraform",
        nix = "nix",
      },
    },
  })
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
depends = 'impatient.nvim'
on_event = ['BufRead', 'BufNewFile']
hook_post_update = 'TSUpdate'
lua_source = '''
  require("nvim-treesitter.configs").setup({
    sync_install = false,
    highlight = {
      enable = true,
      additional_vim_regex_highlighting = false,
      disable = function(lang)
        local byte_size = vim.api.nvim_buf_get_offset(0, vim.api.nvim_buf_line_count(0))
        if byte_size > 1024 * 1024 then return true end

        if not pcall(function() vim.treesitter.get_parser(0, lang):parse() end) then return true end
        if not pcall(function() vim.treesitter.get_query(lang, "highlights") end) then return true end

        return false
      end,
    },
  })
'''

[[plugins]]
repo = 'romgrk/nvim-treesitter-context'
depends = ['impatient.nvim', 'nvim-treesitter']
on_event = ['BufRead', 'BufNewFile']
lua_source = '''
  require("treesitter-context").setup({})
'''

[[plugins]]
repo = 'gpanders/editorconfig.nvim'
depends = ['impatient.nvim']
on_event = ['BufRead', 'BufNewFile']

[[plugins]]
repo = 'yuki-yano/fuzzy-motion.vim'
on_cmd = 'FuzzyMotion'
lua_add = '''
  vim.keymap.set("n", "<leader>f", "<cmd>FuzzyMotion<cr>") 
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
on_event = ['BufRead', 'BufNewFile']

[[plugins]]
repo = 'thinca/vim-partedit'
depends = ['context_filetype.vim']
on_func = ['partedit#']
hook_add = '''
  function! s:operator_partedit() abort
    let context = context_filetype#get()
     if context.range == [[0, 0], [0, 0]]
      echohl WarningMsg
       echomsg 'Context is not found'
       echohl NONE
      return
    endif
    call partedit#start(context.range[0][0], context.range[1][0],
          \ {'filetype': context.filetype, 'opener': ':split'})
  endfunction
  nnoremap <leader>x <Cmd>call <SID>operator_partedit()<CR>
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_event = ['VimEnter']

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
depends = ['vim-vsnip']
on_event = ['VimEnter']

[[plugins]]
repo = 'rafamadriz/friendly-snippets'
on_source = 'vim-vsnip'
